<?php declare(strict_types=1);

namespace App\Domain\Model\\{{properCase modelName}};

class {{properCase modelName}}
{
    private {{properCase modelName}}Id $id;
{{#each fields}}
  {{#if this.isCustomType}}
    private {{#if this.nullable}}?{{/if}}{{properCase ../modelName}}{{properCase this.name}} ${{camelCase this.name}};
  {{else}}
    private {{#if this.nullable}}?{{/if}}{{this.type}} ${{camelCase this.name}};
  {{/if}}
{{/each}}

    public function __construct(
        {{properCase modelName}}Id $id,
    {{#each fields}}
      {{#if this.isCustomType}}
        {{#if this.nullable}}?{{/if}}{{properCase ../modelName}}{{properCase this.name}} ${{camelCase this.name}}{{#unless @last}},{{/unless}}
      {{else}}
        {{#if this.nullable}}?{{/if}}{{this.type}} ${{camelCase this.name}}{{#unless @last}},{{/unless}}
      {{/if}}
    {{/each}}
    ) {
        $this->id = $id;
    {{#each fields}}
        $this->{{camelCase this.name}} = ${{camelCase this.name}};
    {{/each}}
    }

    public function getId(): {{properCase modelName}}Id
    {
        return $this->id;
    }

  {{#each fields}}
    public function get{{properCase this.name}}(): {{#if this.nullable}}?{{/if}}{{#if this.isCustomType}}{{properCase ../modelName}}{{properCase this.name}}{{else}}{{this.type}}{{/if}}
    {
        return $this->{{camelCase this.name}};
    }

  {{/each}}
}
